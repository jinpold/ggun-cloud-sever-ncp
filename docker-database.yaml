#version: '3.8'
#services:
#  #  config:
#  #    container_name: config_server
#  #    image: bkwangho/ggun-config:latest
#  #    ports:
#  #      - "8888:8888"
#  #    restart: always
#  #
#  mysql:
#    container_name: mysql
#    image: mysql:latest
#    volumes:
#      - ./mysql/ggun/etc/mysql/conf.d:/etc/mysql/conf.d:ro
#      - ./mysql/ggun/var/lib/mysql:/var/lib/mysql
#      - ./mysql/ggun/var/log/mysql:/var/log/mysql
#    environment:
#      - MYSQL_DATABASE=ggundb
#      - MYSQL_ROOT_PASSWORD=ggunggun
#      - MYSQL_ROOT_HOST=%
#    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
#    ports:
#      - "3306:3306"
#    restart: always
#    networks:
#      - ggun-network
#
#  mongodb:
#    container_name: mongo
#    image: mongo:latest
#    ports:
#      - 27017:27017
#    volumes:
#      - ./mongodb:/data/db
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=ggun
#      - MONGO_INITDB_ROOT_PASSWORD=ggunggun
#      - MONGO_INITDB_DATABASE=ggundb
#    restart: always
#    networks:
#      - ggun-network
#
#  redis:
#    container_name: redis
#    image: redis:latest
#    ports:
#      - 6379:6379
#    command: redis-server --requirepass ggunggun
#    volumes:
#      - ./redis/data:/data
#      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
#    labels:
#      - "name=redis"
#      - "mode=standalone"
#    restart: always
#    networks:
#      - ggun-network
#
#  kafka:
#    container_name: kafka
#    image: confluentinc/cp-kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      # 내부 Docker 네트워크와 외부 접근 모두를 지원하기 위해 두 개의 광고 리스너를 설정합니다.
#      KAFKA_ADVERTISED_LISTENERS: |
#        PLAINTEXT://kafka:9092,PLAINTEXT://223.130.140.182:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
#    depends_on:
#      - zookeeper
#    restart: always
#    networks:
#      - ggun-network
#
#  zookeeper:
#    container_name: zookeeper
#    image: wurstmeister/zookeeper:latest
#    environment:
#      - ZOO_MY_ID=1
#      - ZOO_SERVERS=server.1=zookeeper:2888:3888
#      - ZOO_TICK_TIME=2000
#      - ZOO_INIT_LIMIT=5
#      - ZOO_SYNC_LIMIT=2
#      - ZOO_DATA_DIR=/data
#      - ZOO_DATA_LOG_DIR=/datalog
#    ports:
#      - "2181:2181"
#      - "2888:2888"
#      - "3888:3888"
#    volumes:
#      - ./zookeeper/data:/data
#      - ./zookeeper/datalog:/datalog
#    restart: always
#    networks:
#      - ggun-network
#
#networks:
#  ggun-network:
#    driver: bridge